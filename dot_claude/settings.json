{
  "env": {
    "CLAUDE_CODE_ENABLE_TELEMETRY": "0",
    "DISABLE_COST_WARNINGS": "1",
    "BASH_DEFAULT_TIMEOUT_MS": "300000",
    "BASH_MAX_TIMEOUT_MS": "1200000"
  },
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Read(**)",
      "Edit(**)",
      "MultiEdit(**)",
      "Write(**)",
      "Glob(**)",
      "Grep(**)",
      "LS(**)",
      "List(**)",
      "Bash(ls:*)",
      "Bash(ls -la:*)",
      "Bash(ls -l:*)",
      "Bash(ls -a:*)",
      "Bash(cat:*)",
      "Bash(less:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(pwd:*)",
      "Bash(cd:*)",
      "Bash(mkdir:*)",
      "Bash(mkdir -p:*)",
      "Bash(touch:*)",
      "Bash(cp:*)",
      "Bash(cp -r:*)",
      "Bash(mv:*)",
      "Bash(tree:*)",
      "Bash(rm node_modules/*)",
      "Bash(rm -rf node_modules:*)",
      "Bash(rm -rf .next:*)",
      "Bash(rm -rf dist:*)",
      "Bash(rm -rf build:*)",
      "Bash(git status:*)",
      "Bash(git add:*)",
      "Bash(git commit -m:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Bash(git checkout:*)",
      "Bash(git branch:*)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      "Bash(git remote:*)",
      "Bash(git clone:*)",
      "Bash(npm:*)",
      "Bash(npm install:*)",
      "Bash(npm run:*)",
      "Bash(npm test:*)",
      "Bash(npm start:*)",
      "Bash(npm build:*)",
      "Bash(npx:*)",
      "Bash(node:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(pip:*)",
      "Bash(pip3:*)",
      "Bash(pip install:*)",
      "Bash(ps:*)",
      "Bash(ps aux:*)",
      "Bash(jobs:*)",
      "Bash(kill [0-9]:*)",
      "Bash(pkill node:*)",
      "Bash(pkill npm:*)",
      "Bash(curl -s:*)",
      "Bash(curl -f:*)",
      "Bash(curl -L:*)",
      "Bash(wget:*)",
      "Bash(ping:*)",
      "WebFetch(domain:localhost)",
      "WebFetch(domain:127.0.0.1)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:developer.mozilla.org)",
      "WebFetch(domain:npmjs.com)",
      "WebSearch",
      "Bash(docker ps:*)",
      "Bash(docker logs:*)",
      "Bash(docker inspect:*)",
      "Bash(docker exec:*)",
      "Bash(docker compose up:*)",
      "Bash(docker compose down:*)",
      "Bash(docker compose logs:*)",
      "Bash(echo:*)",
      "Bash(which:*)",
      "Bash(whoami:*)",
      "Bash(date:*)",
      "Bash(env:*)",
      "Bash(printenv:*)",
      "Bash(history:*)",
      "Bash(make:*)",
      "Bash(make build:*)",
      "Bash(make test:*)",
      "Bash(gemini:*)",
      "Bash(task dev)",
      "Bash(go test:*)",
      "Bash(go build:*)",
      "Bash(go run:*)",
      "Bash(go mod:*)",
      "TodoRead",
      "TodoWrite(**)",
      "Task(**)",
      "mcp__context7",
      "mcp__serena",
      "mcp__playwright",
      "mcp__terraform",
      "mcp__linear-server__get_issue"
    ],
    "deny": [
      "Bash(rm -rf /*)",
      "Bash(rm -rf /)",
      "Bash(sudo rm -rf /*)",
      "Bash(sudo rm -rf /)",
      "Bash(rm -rf ~/*)",
      "Bash(rm -rf /home/*)",
      "Bash(rm -rf /etc/*)",
      "Bash(rm -rf /var/*)",
      "Bash(rm -rf /usr/*)",
      "Bash(rm -rf /opt/*)",
      "Bash(dd if=/dev/zero of=/dev/*)",
      "Bash(dd if=/dev/random of=/dev/*)",
      "Bash(mkfs:*)",
      "Bash(fdisk:*)",
      "Bash(parted:*)",
      "Bash(format:*)",
      "Bash(shutdown:*)",
      "Bash(reboot:*)",
      "Bash(halt:*)",
      "Bash(poweroff:*)",
      "Bash(init 0:*)",
      "Bash(init 6:*)",
      "Bash(sudo su:*)",
      "Bash(sudo -i:*)",
      "Bash(sudo passwd:*)",
      "Bash(passwd:*)",
      "Bash(su -:*)",
      "Bash(nc -l:*)",
      "Bash(netcat -l:*)",
      "Bash(nmap:*)",
      "Bash(bash -i >& /dev/tcp:*)",
      "Bash(sh -i >& /dev/tcp:*)",
      "Bash(python -c:*)",
      "Bash(php -r:*)",
      "Bash(cat ~/.ssh/id_:*)",
      "Bash(cat ~/.aws:*)",
      "Bash(cat /etc/passwd:*)",
      "Bash(cat /etc/shadow:*)",
      "Bash(history | grep -i password:*)",
      "Bash(history | grep -i token:*)",
      "Bash(history | grep -i secret:*)",
      "Bash(docker run --privileged:*)",
      "Bash(docker run --pid=host:*)",
      "Bash(docker run -v /:/host:*)",
      "Bash(docker run -v /var/run/docker.sock:/var/run/docker.sock:*)",
      "Bash(xmrig:*)",
      "Bash(monero:*)",
      "Bash(bitcoin:*)",
      "Bash(miner:*)",
      "Bash(sudo ufw disable:*)",
      "Bash(sudo iptables -F:*)",
      "Bash(sudo systemctl stop firewalld:*)",
      "Bash(rm /var/log:*)",
      "Bash(rm -rf /var/log:*)",
      "Bash(> /var/log:*)",
      "Bash(truncate -s 0 /var/log:*)"
    ]
  },
  "hooks": {
    "Stop": [
      {
        "matcher": ".*",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/claude-notifier.sh"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": ".*",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/claude-notification.sh"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/bash-safety-hook.sh"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/format-hook.sh"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "~/.claude/statusline.sh"
  },
  "enabledPlugins": {
    "document-skills@anthropic-agent-skills": true,
    "example-skills@anthropic-agent-skills": true
  },
  "alwaysThinkingEnabled": true
}
