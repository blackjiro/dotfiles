{ config, pkgs, ... }:

let
  isMacOS = pkgs.stdenv.isDarwin;
in
{
  home.username = "{{ .chezmoi.username }}";
  home.homeDirectory = "{{ .chezmoi.homeDir }}";

  home.stateVersion = "24.05";

  nixpkgs.config.allowUnfree = true;

  home.packages = with pkgs; [
    bat
    chezmoi
    direnv
    eza
    fd
    fish
    fzf
    gh
    git
    grc
    gnused
    htop
    ijq
    jq
    lazygit
    mise
    nerd-fonts.fira-code
    nerd-fonts.hack
    nerd-fonts.jetbrains-mono
    nkf
    _1password-cli
    ripgrep
    ripgrep-all
    rnr
    skim
    starship
    tree
    tree-sitter
    wget
    zellij
  ] ++ lib.optionals isMacOS [
    awscli2
  ];  

  programs.home-manager.enable = true;

  programs.zsh = {
    enable = true;
    initContent = ''
      if [[ $(ps -o comm= -p $PPID) != "fish" && ''$SHLVL == 1 ]]; then
        if [[ -o login ]]; then
          LOGIN_OPTION='--login'
        else
          LOGIN_OPTION=""
        fi
        exec fish $LOGIN_OPTION
      fi
      export EDITOR=vim
    '';
  };
  programs.bash = {
    enable = true;
    initExtra = ''
      if [[ $(${pkgs.procps}/bin/ps --no-header --pid=$PPID --format=comm) != "fish" && -z ''${BASH_EXECUTION_STRING} ]]
      then
        shopt -q login_shell && LOGIN_OPTION='--login' || LOGIN_OPTION=""
        exec ${pkgs.fish}/bin/fish $LOGIN_OPTION
      fi
      export EDITOR=vim
    '';
  };
  programs.fish = {
    enable = true;
    shellAbbrs = {
      cdf = "cd (fd . $HOME --type d --hidden --exclude .git | fzf )";
      vd = "cd (fd . $HOME --type d --hidden --exclude .git | fzf ) && nvim .";
      vf = "fd . $HOME --type f --hidden --exclude .git | fzf | xargs nvim";
      zmf = "cd (fd . $HOME --type d --hidden --exclude .git | fzf) && zellij attach $(basename $(pwd)) || zellij -s $(basename $(pwd))";
      gwcd = "cd (git worktree list | awk '{print $1}' | fzf)";
      gwrm = "git worktree remove (git worktree list | awk '{print $1}' | fzf)";

      dot = "cd (chezmoi source-path); and vi .";
      dotc = "cd (chezmoi source-path); claude";
      dc = "docker compose";
      dcr = "docker compose run --rm";
      dce = "docker compose exec";
      cl  = "claude";
      cld = "claude --dangerously-skip-permissions";
      clp = "claude --permission-mode plan"

    };
    shellAliases = {
      vim = "nvim";
      vi = "nvim";
      claude = "~/.claude/local/claude";
    };
    interactiveShellInit = ''
      if test -x /opt/homebrew/bin/brew
          eval "$(/opt/homebrew/bin/brew shellenv)"
          fish_add_path /opt/homebrew/opt/libpq/bin
      end

      set fish_greeting # Disable greeting
      set -g -x FZF_DEFAULT_COMMAND "fd . $HOME"
      set -g -x SHELL (which fish)

      # path
      fish_add_path $HOME/bin
      fish_add_path $HOME/.local/share/aquaproj-aqua/bin
      fish_add_path $HOME/.local/bin
      fish_add_path $HOME/.cargo/bin
      fish_add_path /opt/homebrew/opt/openjdk@11/bin
      fish_add_path /usr/local/bin

      # The next line updates PATH for the Google Cloud SDK.
      if [ -f "$HOME/google-cloud-sdk/path.fish.inc" ]
          . "$HOME/google-cloud-sdk/path.fish.inc"
      end

      # direnv
      direnv hook fish | source

      set -x VISUAL nvim
    '';
    plugins = [
      # Enable a plugin (here grc for colorized command output) from nixpkgs
      { name = "grc"; src = pkgs.fishPlugins.grc.src; }
      { name = "z"; src = pkgs.fishPlugins.z.src; }
      { name = "fzf-fish"; src = pkgs.fishPlugins.fzf-fish.src; }
      { name = "fish-you-should-use"; src = pkgs.fishPlugins.fish-you-should-use.src; }
      { name = "bass"; src = pkgs.fishPlugins.bass.src; }
    ];
  };
  programs.mise = {
    enable = true;
    enableFishIntegration = true;
    globalConfig = {
      tools = {
        "node" = "lts";
        "ruby" = "3";
        "terraform" = "latest";
        "python" = "3.11";
        "go" = "1.23";
      };
    };
  };
  programs.starship = {
    enable = true;
    enableFishIntegration = true;
  };
}




